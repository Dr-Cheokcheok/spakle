<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spakle.spakleclone20221104.repository.AccountRepository">

    <insert id="save" parameterType="com.spakle.spakleclone20221104.domain.User">
        insert into
            user_mst
        values (
            #{id},
            #{username},
            #{password},
            'ROLE_USER',
            #{name},
            #{phone},
            #{post_code},
            #{address},
            #{detail_address},
            #{event_sosick},
            now(),
            now()
        )
    </insert>

    <insert id="like">
        INSERT INTO
            likes (id, user_id, product_id)
        SELECT
            0,
            #{userId},
            #{productId} FROM DUAL
        WHERE NOT EXISTS
            (SELECT
                user_id,
                product_id
            FROM
                likes
            WHERE
                user_id = #{userId} and product_id = #{productId})

    </insert>

    <update id="updateUser">
        update
            user_mst
        set
            password = #{password},
            name = #{name},
            phone = #{phone},
            event_sosick = #{event_sosick},
            post_code = #{post_code},
            address = #{address},
            detail_address = #{detail_address},
            update_date = now()
        where
            id = #{id}

    </update>

    <select id="findUserByUsername" parameterType="String" resultType="com.spakle.spakleclone20221104.domain.User">
        select
            id,
            username,
            password,
            role,
            name,
            phone,
            post_code,
            address,
            detail_address,
            event_sosick,
            create_date,
            update_date
        from
            user_mst
        where
            username = #{username}
    </select>

    <select id="overlappedID" parameterType="com.spakle.spakleclone20221104.domain.ChkId" resultType="int">
        select count(username) From user_mst where username=#{username}
    </select>

    <select id="getLikes" resultType="com.spakle.spakleclone20221104.domain.CollectionProduct">
        select
            pm.id,
            pm.name,
            pm.rate,
            pm.retail_price,
            img,
            update_date
        from
            likes li
            left outer join product pm on(pm.id = li.product_id)
        where
            li.user_id = #{id}
    </select>

    <delete id="deleteLikes">
        delete
            *
        from
            likes
        where
            user_id = #{userId},
            product_id = #{product_id}
    </delete>
</mapper>
